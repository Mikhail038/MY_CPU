;summator

    inp
    pop rax
    inp
    pop rbx
    inp
    pop rcx

    call l_solver


l_solver:
    pop rax
    push 0
    jne e_l_solver
    pop rbx
    push 0
    je b_0

    b_0:
        pop rcx
        push 0
        je c_0


    c_0:
        push
        ret

    e_l_solver:
        ret
ef1:
    ret
